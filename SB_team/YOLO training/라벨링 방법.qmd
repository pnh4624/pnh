---
title: "labeling의 이해와 labeling 방법 "
format:
  gfm:
    toc: true
editor: visual
---

## labeling과 labelImg

### labeling이란

인공지능이 이미지 데이터를 학습하기 위해서는 이미지 훈련 데이터가 필요하다. 라벨링은 이미지 훈련 데이터를 만드는 과정이다.

인공지능에게 이미지상의 객체를 인식 시키기 위해서는, 객체를 가르키는 이미지상의 위치정보와 객체가 무엇인지 알려주는 class 데이터가 필요하다. 객체에 대한 위치 정보(바운딩박스)와 class 정보를 통해서 인공지능은 이미지상의 사물을 학습하고 인식할 수 있게 된다.

labelImg는 대표적인 라벨링프로그램이다. labelImg에서 지원하는 yolo format으로 label data를 만들면, yolo 알고리즘에서 데이터 트레이닝을 시킬 수 있다.

예를 들어서 내가 이미지에서 '핸드폰'의 객체에 대해서 labeling을 한다고 가정해보자. 이미지에서 핸드폰객체에는 모두 바운딩 박스를 그려야 할 것이다. 그리고 '핸드폰'인 객체들은 ' 핸드폰' class로 label을 부여하여 바운딩 박스가 '핸드폰'을 가르킨다는 것을 알려주어야 할 것이다.

## labelImg 사용법

### 1. 설치와 실행

\(1\) 개발자의 github에서 labelIm파일을 다운 받는다.

개발자의 github\>Release\>Binary v.1.8.1\>window v.1.8.1.zip 다운로드

개발자의 github 주소: <https://github.com/heartexlabs/labelImg.git>

![](images/paste-BBBEA68C.png){width="239"}

\(2\) 파일 압축을 풀고 labelImg.exe 파일을 실행시킨다.

![](images/paste-CADA72A2.png){width="291"}

### 2. dir 지정과 format 설정

\(1\) 원본 이미지 데이터 가져오기

open dir를 누른 후, 라벨링에 필요한 원본 이미지가 있는 폴더를 선택하여 '폴더 선택'을 눌러준다.

![](images/paste-7FB5FD9B.png){width="357"}

\(2\) 라벨링 데이터 저장 폴더 지정하기

change save dir를 누른 후, 라벨링 정보가 담길 txt을 저장 할 폴더를 지정하여 '폴더 선택'을 눌러준다.

![](images/paste-D64F6F9C.png){width="362"}

\(3\) txt파일 형식 설정하기

아래의 칸을 눌러, txt파일이 저장 될 format을 설정해준다.

yolo 모델에 쓰기 위해서 yolo format을 설정 해 주었다.

![](images/paste-E703587B.png){width="225"}

![](images/paste-57F1B47B.png){width="228"}

### 3. labelIng

\(1\) 박스 그리기

'Create RectBox'를 클릭 하거나 'ctrl + W'단축키를 누른 후, 객체를 마우르로 드래그하여 바운딩 박스를 그린다.

![](images/paste-4056D1E3.png){width="225"}

![](images/%EB%93%9C%EB%9E%98%EA%B7%B8-01.png){width="225"}

\(2\) label 달아주기

객체에 label을 달아준다.

같은 객체에 대해서 반복 라벨링을 할 시, Use default label을 체크한 후 라벨 이름을 적어두면 팝업 없이 자동으로 같은 이름으로 라벨링 된다.

![](images/paste-04DC219F.png){width="226"}

![](images/paste-5714AF9B.png){width="225"}

### 4. 저장 & 확인하기

\(1\) 저장하고 종료하기

Save 버튼 또는 'ctrl + S'를 눌러 작업물을 저장 할 수 있다.

labelImg는 자동 저장 기능이 없으니 꼭 중간중간 저장버튼을 눌러주어야 마음 아픈 일이 생기지 않는다.

![](images/paste-A14523B5.png){width="367"}

### 5. 수정하기

\(1\) 바운딩 박스 지우기

지우고자하는 바운딩박스를 선택한 후에 'delete'키를 눌러 바운딩 박스를 지울 수 있다.

이 때, 아무 바운딩박스도 지정하지 않고 'delete'를 누르면 에러가 나면서 프로그램이 '강제 종료' 되니 유의하자. (이러한 실수를 대비하여 착실하게 저장하기를 눌러두자...)

![](images/paste-235DB6EB.png){width="397"}

\(2\) 바운딩 박스 복사하기

복사 하고자 하는 바운딩 박스를 선택한 후, 'ctrl + D'단축키로 바운딩박스를 복사 할 수 있다.

ctrl+C, ctrl+V는 복사, 붙여넣기 기능이 아니다. 특히 ctrl +V는 현재 작업 중인 txt파일에 전 이미지 라벨링 txt 내역을 덮어씌우는 기능이 있다. labelImg는 'ctrl + Z'(되돌리기) 기능이 없으니 반드시 유의하자.

![](images/%EB%B3%B5%EC%82%AC.png){width="398"}

\(3\) 옮기기

옮기고자 하는 바운딩박스를 선택 한 후, '키보드 화살표' 키로 바운딩 박스를 옮길 수 있다.

\(4\) 크기 조정하기

크기를 조정하고 싶은 곳에 마우스 커서를 올린 뒤, 드래그하여 크기를 조정할 수 있다.

![](images/%EC%A7%80%EC%9A%B0%EA%B8%B0.png){width="400"}

## labeling data 확인하기

labelImg에서 yolo format으로 생성한 파일은 다음과 같다.

각 이미지에 대한 txt 파일과 내가 분류한 객체들의 종류에 대한 정보가 담긴 classes.txt 파일이 만들어진다.

![](images/paste-A2F0ED66.png){width="481"}

### classes.txt 파일

classes에는 class 정보가 있다. 바운딩 박스를 친 객체들이 몇개의, 어떤 종류로 분류되었는지 알 수 있다.

각 이미지의 txt 파일의 1열은 class에 관한 정보가 있다. 아래의 예시에서는 'particle' 하나의 종류만이 라벨링 되었기 떄문에, 이미지 txt 파일의 1열이 '0' 한 종류의 class로 분류되었음을 보여주고있다.

![](images/paste-203BB658.png){width="277"}

![](images/paste-10FC00E1.png){width="329"}

### 이미지 txt 파일

이미지 txt 파일의 2,3번째 열은 각각 바운딩박스 정 중앙 좌표의 정보를 담고 있다.

각 좌표는 이미지의 가로,세로 길이에 대한 비율의 값으로 표기된다.

4,5 번째 열은 각각 바운딩박스의 가로 넓이, 세로 높이의 정보를 담고 있다.

각 길이는 이미지의 가로, 세로 길이에 대한 비율의 값으로 표기된다.

![](images/paste-22CB197C.png){width="293"}

![](images/paste-B60F0AFF.png){width="308"}
